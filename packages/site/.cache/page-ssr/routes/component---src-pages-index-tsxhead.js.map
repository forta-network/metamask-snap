{"version":3,"file":"component---src-pages-index-tsxhead.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAmC;AACI;AACqB;AAM1C;AAMK;AAAA;AAAA;AAEvB,MAAMW,SAAS,GAAGV,wEAAU;EAAAY;AAAA,0MAOxB,CAAC;EAAEC;AAAM,CAAC,KAAKA,KAAK,CAACC,YAAY,CAACC,KAAK,CAO1C;AAED,MAAMC,OAAO,GAAGhB,uEAAS;EAAAY;AAAA,4DAIxB;AAED,MAAMM,IAAI,GAAGlB,yEAAW;EAAAY;AAAA,oBACZQ,KAAK,IAAKA,KAAK,CAACP,KAAK,CAACQ,MAAM,CAACC,OAAO,CAACC,OAAO,CACvD;AAED,MAAMC,QAAQ,GAAGxB,sEAAQ;EAAAY;AAAA,0FACV,CAAC;EAAEC;AAAM,CAAC,KAAKA,KAAK,CAACa,SAAS,CAACC,KAAK,EAI/C,CAAC;EAAEd;AAAM,CAAC,KAAKA,KAAK,CAACC,YAAY,CAACC,KAAK,EAC1B,CAAC;EAAEF;AAAM,CAAC,KAAKA,KAAK,CAACa,SAAS,CAACE,IAAI,CAEnD;AAED,MAAMC,aAAa,GAAG7B,wEAAU;EAAAY;AAAA,gJAS/B;AAED,MAAMkB,MAAM,GAAG9B,wEAAU;EAAAY;AAAA,sMACH,CAAC;EAAEC;AAAM,CAAC,KAAKA,KAAK,CAACQ,MAAM,CAACU,UAAU,CAACC,WAAW,EAClD,CAAC;EAAEnB;AAAM,CAAC,KAAKA,KAAK,CAACQ,MAAM,CAACY,MAAM,CAACV,OAAO,EACrD,CAAC;EAAEV;AAAM,CAAC,KAAKA,KAAK,CAACQ,MAAM,CAACO,IAAI,CAACI,WAAW,EACpC,CAAC;EAAEnB;AAAM,CAAC,KAAKA,KAAK,CAACqB,KAAK,CAACX,OAAO,EASjD,CAAC;EAAEV;AAAM,CAAC,KAAKA,KAAK,CAACC,YAAY,CAACC,KAAK,CAI1C;AAED,MAAMoB,YAAY,GAAGnC,wEAAU;EAAAY;AAAA,+OACT,CAAC;EAAEC;AAAM,CAAC,KAAKA,KAAK,CAACQ,MAAM,CAACe,KAAK,CAACC,KAAK,EACvC,CAAC;EAAExB;AAAM,CAAC,KAAKA,KAAK,CAACQ,MAAM,CAACe,KAAK,CAACb,OAAO,EACpD,CAAC;EAAEV;AAAM,CAAC,KAAKA,KAAK,CAACQ,MAAM,CAACe,KAAK,CAACJ,WAAW,EACrC,CAAC;EAAEnB;AAAM,CAAC,KAAKA,KAAK,CAACqB,KAAK,CAACX,OAAO,EAMjD,CAAC;EAAEV;AAAM,CAAC,KAAKA,KAAK,CAACC,YAAY,CAACC,KAAK,CAM1C;AAED,MAAMuB,KAAK,GAAG,MAAM;EAClB,MAAM;IAAA,GAACC,KAAK;IAAA,GAAEC;EAAQ,IAAIzC,iDAAU,CAACG,mDAAe,CAAC;EAErD,MAAMuC,kBAAkB,GAAG,YAAY;IACrC,IAAI;MACF,MAAMtC,mDAAW,EAAE;MACnB,MAAMuC,aAAa,GAAG,MAAMtC,+CAAO,EAAE;MAErCoC,QAAQ,CAAC;QACPG,IAAI,EAAE1C,gEAA4B;QAClC4C,OAAO,EAAEH;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOI,CAAC,EAAE;MACVC,OAAO,CAACX,KAAK,CAACU,CAAC,CAAC;MAChBN,QAAQ,CAAC;QAAEG,IAAI,EAAE1C,4DAAwB;QAAE4C,OAAO,EAAEC;MAAE,CAAC,CAAC;IAC1D;EACF,CAAC;EAED,oBACEG,uDAAAA,CAACvC,SAAS;IAAAwC,wBACRC,sDAAAA,CAACnC,OAAO;MAAAkC;IAAA,EAAoC,eAC5CC,sDAAAA,CAAC3B,QAAQ;MAAA0B;IAAA,EAEE,eACXD,uDAAAA,CAACpB,aAAa;MAAAqB,WACXX,KAAK,CAACH,KAAK,iBACVa,uDAAAA,CAACd,YAAY;QAAAe,wBACXC,sDAAAA;UAAAD;QAAA,EAAyB,OAAEX,KAAK,CAACH,KAAK,CAACgB,OAAO;MAAA,EAEjD,EACA,CAACb,KAAK,CAACc,OAAO,iBACbF,sDAAAA,CAAC1C,6CAAI;QACH6C,OAAO,EAAE;UACPC,KAAK,EAAE,SAAS;UAChBC,WAAW,EACT,wIAAwI;UAC1IC,MAAM,eAAEN,sDAAAA,CAAC5C,2DAAkB;QAC7B,CAAE;QACFmD,SAAS;MAAA,EAEZ,EACA,CAACnB,KAAK,CAACG,aAAa,iBACnBS,sDAAAA,CAAC1C,6CAAI;QACH6C,OAAO,EAAE;UACPC,KAAK,EAAE,SAAS;UAChBC,WAAW,EACT,+DAA+D;UACjEC,MAAM,eACJN,sDAAAA,CAAC7C,sDAAa;YACZqD,OAAO,EAAElB,kBAAmB;YAC5BmB,QAAQ,EAAE,CAACrB,KAAK,CAACc;UAAQ;QAG/B,CAAE;QACFO,QAAQ,EAAE,CAACrB,KAAK,CAACc,OAAQ;QACzBK,SAAS;MAAA,EAEZ,EACArD,oEAA4B,CAACkC,KAAK,CAACG,aAAa,CAAC,iBAChDS,sDAAAA,CAAC1C,6CAAI;QACH6C,OAAO,EAAE;UACPC,KAAK,EAAE,WAAW;UAClBC,WAAW,EACT,+HAA+H;UACjIC,MAAM,eACJN,sDAAAA,CAAC3C,wDAAe;YACdmD,OAAO,EAAElB,kBAAmB;YAC5BmB,QAAQ,EAAE,CAACrB,KAAK,CAACG;UAAc;QAGrC,CAAE;QACFkB,QAAQ,EAAE,CAACrB,KAAK,CAACG,aAAc;QAC/BgB,SAAS;MAAA,EAEZ;IAAA,EACa;EAAA,EACN;AAEhB,CAAC;AAED,iEAAepB,KAAK","sources":["webpack://site/./src/pages/index.tsx"],"sourcesContent":["import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { MetamaskActions, MetaMaskContext } from '../hooks';\nimport {\n  connectSnap,\n  getSnap,\n  sendHello,\n  shouldDisplayReconnectButton,\n} from '../utils';\nimport {\n  ConnectButton,\n  InstallFlaskButton,\n  ReconnectButton,\n  Card,\n} from '../components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  margin-top: 7.6rem;\n  margin-bottom: 7.6rem;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding-left: 2.4rem;\n    padding-right: 2.4rem;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    width: auto;\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-top: 0;\n  margin-bottom: 2.4rem;\n  text-align: center;\n`;\n\nconst Span = styled.span`\n  color: ${(props) => props.theme.colors.primary.default};\n`;\n\nconst Subtitle = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  font-weight: 500;\n  margin-top: 0;\n  margin-bottom: 0;\n  ${({ theme }) => theme.mediaQueries.small} {\n    font-size: ${({ theme }) => theme.fontSizes.text};\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  max-width: 64.8rem;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.5rem;\n`;\n\nconst Notice = styled.div`\n  background-color: ${({ theme }) => theme.colors.background.alternative};\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\n  color: ${({ theme }) => theme.colors.text.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n\n  & > * {\n    margin: 0;\n  }\n  ${({ theme }) => theme.mediaQueries.small} {\n    margin-top: 1.2rem;\n    padding: 1.6rem;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: ${({ theme }) => theme.colors.error.muted};\n  border: 1px solid ${({ theme }) => theme.colors.error.default};\n  color: ${({ theme }) => theme.colors.error.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-bottom: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding: 1.6rem;\n    margin-bottom: 1.2rem;\n    margin-top: 1.2rem;\n    max-width: 100%;\n  }\n`;\n\nconst Index = () => {\n  const [state, dispatch] = useContext(MetaMaskContext);\n\n  const handleConnectClick = async () => {\n    try {\n      await connectSnap();\n      const installedSnap = await getSnap();\n\n      dispatch({\n        type: MetamaskActions.SetInstalled,\n        payload: installedSnap,\n      });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  return (\n    <Container>\n      <Heading>Welcome to the Forta snap</Heading>\n      <Subtitle>\n        Install the Forta snap below\n      </Subtitle>\n      <CardContainer>\n        {state.error && (\n          <ErrorMessage>\n            <b>An error happened:</b> {state.error.message}\n          </ErrorMessage>\n        )}\n        {!state.isFlask && (\n          <Card\n            content={{\n              title: 'Install',\n              description:\n                'Snaps is pre-release software only available in MetaMask Flask, a canary distribution for developers with access to upcoming features.',\n              button: <InstallFlaskButton />,\n            }}\n            fullWidth\n          />\n        )}\n        {!state.installedSnap && (\n          <Card\n            content={{\n              title: 'Connect',\n              description:\n                'Get started by connecting to and installing the example snap.',\n              button: (\n                <ConnectButton\n                  onClick={handleConnectClick}\n                  disabled={!state.isFlask}\n                />\n              ),\n            }}\n            disabled={!state.isFlask}\n            fullWidth\n          />\n        )}\n        {shouldDisplayReconnectButton(state.installedSnap) && (\n          <Card\n            content={{\n              title: 'Reconnect',\n              description:\n                'While connected to a local running snap this button will always be displayed in order to update the snap if a change is made.',\n              button: (\n                <ReconnectButton\n                  onClick={handleConnectClick}\n                  disabled={!state.installedSnap}\n                />\n              ),\n            }}\n            disabled={!state.installedSnap}\n            fullWidth\n          />\n        )}\n      </CardContainer>\n    </Container>\n  );\n};\n\nexport default Index;\n"],"names":["useContext","styled","MetamaskActions","MetaMaskContext","connectSnap","getSnap","shouldDisplayReconnectButton","ConnectButton","InstallFlaskButton","ReconnectButton","Card","Container","div","displayName","theme","mediaQueries","small","Heading","h1","Span","span","props","colors","primary","default","Subtitle","p","fontSizes","large","text","CardContainer","Notice","background","alternative","border","radii","ErrorMessage","error","muted","Index","state","dispatch","handleConnectClick","installedSnap","type","SetInstalled","payload","e","console","SetError","_jsxs","children","_jsx","message","isFlask","content","title","description","button","fullWidth","onClick","disabled"],"sourceRoot":""}