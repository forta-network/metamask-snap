{"version":3,"file":"component---src-pages-index-tsx-8f1a2ec84b68e9a2e184.js","mappings":"mMAeMA,EAAYC,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,mBAAAC,YAAAA,gBAAVF,CAAU,sMAOxB,YAAQ,SAALG,MAAkBC,aAAaC,KAAK,IASrCC,EAAUN,EAAAA,QAAAA,GAAAA,WAAS,CAAAC,YAAAA,iBAAAC,YAAAA,gBAATF,CAAS,0DAUnBO,GAJOP,EAAAA,QAAAA,KAAAA,WAAW,CAAAC,YAAAA,cAAAC,YAAAA,gBAAXF,CAAW,gBACb,SAACQ,GAAK,OAAKA,EAAML,MAAMM,OAAOC,QAAQC,OAAO,IAGvCX,EAAAA,QAAAA,EAAAA,WAAQ,CAAAC,YAAAA,kBAAAC,YAAAA,gBAARF,CAAQ,oFACV,YAAQ,SAALG,MAAkBS,UAAUC,KAAK,IAI/C,YAAQ,SAALV,MAAkBC,aAAaC,KAAK,IAC1B,YAAQ,SAALF,MAAkBS,UAAUE,IAAI,KAI9CC,EAAgBf,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,uBAAAC,YAAAA,gBAAVF,CAAU,8IA8B1BgB,GAnBShB,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,gBAAAC,YAAAA,gBAAVF,CAAU,8LACH,YAAQ,SAALG,MAAkBM,OAAOQ,WAAWC,WAAW,IAClD,YAAQ,SAALf,MAAkBM,OAAOU,OAAOR,OAAO,IACrD,YAAQ,SAALR,MAAkBM,OAAOK,KAAKI,WAAW,IACpC,YAAQ,SAALf,MAAkBiB,MAAMT,OAAO,IASjD,YAAQ,SAALR,MAAkBC,aAAaC,KAAK,IAMtBL,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAAA,sBAAAC,YAAAA,gBAAVF,CAAU,uOACT,YAAQ,SAALG,MAAkBM,OAAOY,MAAMC,KAAK,IACvC,YAAQ,SAALnB,MAAkBM,OAAOY,MAAMV,OAAO,IACpD,YAAQ,SAALR,MAAkBM,OAAOY,MAAMH,WAAW,IACrC,YAAQ,SAALf,MAAkBiB,MAAMT,OAAO,IAMjD,YAAQ,SAALR,MAAkBC,aAAaC,KAAK,KAwF3C,UAhFc,WACZ,OAA0BkB,EAAAA,EAAAA,YAAWC,EAAAA,IAA9BC,EAAK,KAAEC,EAAQ,KAEhBC,EAAkB,mCAAG,2FAAAC,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,GAEjBC,EAAAA,EAAAA,MAAa,cAAAD,EAAAA,KAAAA,GACSE,EAAAA,EAAAA,MAAS,OAA/BC,EAAgB,EAAH,KAEnBL,EAAS,CACPM,KAAMC,EAAAA,GAAAA,aACNC,QAASH,IACRH,EAAAA,KAAAA,GAAA,aAAAA,EAAAA,KAAAA,EAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAEHO,QAAQd,MAAM,EAAD,IACbK,EAAS,CAAEM,KAAMC,EAAAA,GAAAA,SAA0BC,QAAS,EAAF,KAAO,yDAE5D,kBAbuB,mCAexB,OACEE,EAAAA,EAAAA,MAACrC,EAAS,CAAAsC,SAAAA,EACRC,EAAAA,EAAAA,KAAChC,EAAO,CAAA+B,SAAAA,+BACRC,EAAAA,EAAAA,KAAC/B,EAAQ,CAAA8B,SAAAA,kCAGTD,EAAAA,EAAAA,MAACrB,EAAa,CAAAsB,SAAAA,CACXZ,EAAMJ,QACLe,EAAAA,EAAAA,MAACpB,EAAY,CAAAqB,SAAAA,EACXC,EAAAA,EAAAA,KAAAA,IAAAA,CAAAD,SAAAA,uBAAyB,IAAEZ,EAAMJ,MAAMkB,YAGzCd,EAAMe,UACNF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CACHC,QAAS,CACPC,MAAO,UACPC,YACE,yIACFC,QAAQP,EAAAA,EAAAA,KAACQ,EAAAA,GAAkB,KAE7BC,WAAS,KAGXtB,EAAMM,gBACNO,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CACHC,QAAS,CACPC,MAAO,UACPC,YACE,8DACFC,QACEP,EAAAA,EAAAA,KAACU,EAAAA,GAAa,CACZC,QAAStB,EACTuB,UAAWzB,EAAMe,WAIvBU,UAAWzB,EAAMe,QACjBO,WAAS,KAGZI,EAAAA,EAAAA,IAA6B1B,EAAMM,iBAClCO,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CACHC,QAAS,CACPC,MAAO,YACPC,YACE,gIACFC,QACEP,EAAAA,EAAAA,KAACc,EAAAA,GAAe,CACdH,QAAStB,EACTuB,UAAWzB,EAAMM,iBAIvBmB,UAAWzB,EAAMM,cACjBgB,WAAS,SAMrB,C","sources":["webpack://site/./src/pages/index.tsx"],"sourcesContent":["import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { MetamaskActions, MetaMaskContext } from '../hooks';\nimport {\n  connectSnap,\n  getSnap,\n  shouldDisplayReconnectButton,\n} from '../utils';\nimport {\n  ConnectButton,\n  InstallFlaskButton,\n  ReconnectButton,\n  Card,\n} from '../components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  margin-top: 7.6rem;\n  margin-bottom: 7.6rem;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding-left: 2.4rem;\n    padding-right: 2.4rem;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    width: auto;\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-top: 0;\n  margin-bottom: 2.4rem;\n  text-align: center;\n`;\n\nconst Span = styled.span`\n  color: ${(props) => props.theme.colors.primary.default};\n`;\n\nconst Subtitle = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  font-weight: 500;\n  margin-top: 0;\n  margin-bottom: 0;\n  ${({ theme }) => theme.mediaQueries.small} {\n    font-size: ${({ theme }) => theme.fontSizes.text};\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  max-width: 64.8rem;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.5rem;\n`;\n\nconst Notice = styled.div`\n  background-color: ${({ theme }) => theme.colors.background.alternative};\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\n  color: ${({ theme }) => theme.colors.text.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n\n  & > * {\n    margin: 0;\n  }\n  ${({ theme }) => theme.mediaQueries.small} {\n    margin-top: 1.2rem;\n    padding: 1.6rem;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: ${({ theme }) => theme.colors.error.muted};\n  border: 1px solid ${({ theme }) => theme.colors.error.default};\n  color: ${({ theme }) => theme.colors.error.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-bottom: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding: 1.6rem;\n    margin-bottom: 1.2rem;\n    margin-top: 1.2rem;\n    max-width: 100%;\n  }\n`;\n\nconst Index = () => {\n  const [state, dispatch] = useContext(MetaMaskContext);\n\n  const handleConnectClick = async () => {\n    try {\n      await connectSnap();\n      const installedSnap = await getSnap();\n\n      dispatch({\n        type: MetamaskActions.SetInstalled,\n        payload: installedSnap,\n      });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  return (\n    <Container>\n      <Heading>Welcome to the Forta snap</Heading>\n      <Subtitle>\n        Install the Forta snap below\n      </Subtitle>\n      <CardContainer>\n        {state.error && (\n          <ErrorMessage>\n            <b>An error happened:</b> {state.error.message}\n          </ErrorMessage>\n        )}\n        {!state.isFlask && (\n          <Card\n            content={{\n              title: 'Install',\n              description:\n                'Snaps is pre-release software only available in MetaMask Flask, a canary distribution for developers with access to upcoming features.',\n              button: <InstallFlaskButton />,\n            }}\n            fullWidth\n          />\n        )}\n        {!state.installedSnap && (\n          <Card\n            content={{\n              title: 'Connect',\n              description:\n                'Get started by connecting to and installing the Forta snap.',\n              button: (\n                <ConnectButton\n                  onClick={handleConnectClick}\n                  disabled={!state.isFlask}\n                />\n              ),\n            }}\n            disabled={!state.isFlask}\n            fullWidth\n          />\n        )}\n        {shouldDisplayReconnectButton(state.installedSnap) && (\n          <Card\n            content={{\n              title: 'Reconnect',\n              description:\n                'While connected to a local running snap this button will always be displayed in order to update the snap if a change is made.',\n              button: (\n                <ReconnectButton\n                  onClick={handleConnectClick}\n                  disabled={!state.installedSnap}\n                />\n              ),\n            }}\n            disabled={!state.installedSnap}\n            fullWidth\n          />\n        )}\n      </CardContainer>\n    </Container>\n  );\n};\n\nexport default Index;\n"],"names":["Container","styled","displayName","componentId","theme","mediaQueries","small","Heading","Subtitle","props","colors","primary","default","fontSizes","large","text","CardContainer","ErrorMessage","background","alternative","border","radii","error","muted","useContext","MetaMaskContext","state","dispatch","handleConnectClick","_context","connectSnap","getSnap","installedSnap","type","MetamaskActions","payload","console","_jsxs","children","_jsx","message","isFlask","Card","content","title","description","button","InstallFlaskButton","fullWidth","ConnectButton","onClick","disabled","shouldDisplayReconnectButton","ReconnectButton"],"sourceRoot":""}